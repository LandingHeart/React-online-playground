# docker-compose.yml
services:
  # NGINX REVERSE PROXY
  # This is the single entry point for your application
  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      # Expose port 3000 on your machine and map it to port 80 in the container
      - "3000:80"
    volumes:
      # Mount the configuration file you created
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api

  # FastAPI Backend Service
  api:
    container_name: api
    build:
      context: .
      dockerfile: api/Dockerfile
    # This port is no longer exposed to the host machine
    # It's only accessible to other containers on the Docker network
    volumes:
      - ./api:/app
    depends_on:
      - db
    env_file:
      - .env
    command: uvicorn main:app --host 0.0.0.0 --port 8080 --reload

  # PostgreSQL Database Service
  postgres:
    container_name: postgres
    image: "postgres:alpine"
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
    ports:
      # You can keep this to connect to your DB with a local tool if you want
      - "5432:5432"

  # Next.js Frontend Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    # This port is no longer exposed to the host machine
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
      - postgres
    env_file:
      - .env

volumes:
  postgres_db_data:

networks:
  app-network:
    driver: bridge
