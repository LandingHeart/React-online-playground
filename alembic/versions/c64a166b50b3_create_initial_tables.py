"""create initial tables

Revision ID: c64a166b50b3
Revises: 
Create Date: 2025-07-28 10:48:50.515869

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import func  # Import func for server_default and onupdate


# revision identifiers, used by Alembic.
revision: str = 'c64a166b50b3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
  """Upgrade schema."""
  # ### commands auto generated by Alembic - please adjust! ###

  # Create 'items' table
  op.create_table(
      'items',
      sa.Column('id', sa.Integer(), nullable=False),
      # index=True is handled by Alembic implicitly for PK, or can be added with op.create_index
      sa.Column('name', sa.String(), nullable=True),
      sa.Column('description', sa.String(), nullable=True),
      sa.PrimaryKeyConstraint('id')
  )
  op.create_index(op.f('ix_items_id'), 'items', ['id'], unique=False)
  op.create_index(op.f('ix_items_name'), 'items', ['name'], unique=False)
  op.create_index(op.f('ix_items_description'), 'items',
                  ['description'], unique=False)

  # Create 'projects' table
  op.create_table(
      'projects',
      sa.Column('id', sa.Integer(), nullable=False),
      sa.Column('name', sa.String(length=255), nullable=False),
      # Use sa.Text for Text type
      sa.Column('description', sa.Text(), nullable=True),
      # Assuming nullable=True for now, can be changed later
      sa.Column('user_id', sa.Integer(), nullable=True),
      sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                server_default=func.now(), nullable=True),
      sa.Column('updated_at', sa.TIMESTAMP(timezone=True),
                default=None, onupdate=func.now(), nullable=True),
      sa.PrimaryKeyConstraint('id')
  )
  op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)

  # Create 'files' table
  op.create_table(
      'files',
      sa.Column('id', sa.Integer(), nullable=False),
      sa.Column('project_id', sa.Integer(), nullable=False),
      sa.Column('path', sa.String(length=255), nullable=False),
      # Use sa.Text for Text type
      sa.Column('content', sa.Text(), nullable=False),
      sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                server_default=func.now(), nullable=True),
      sa.Column('updated_at', sa.TIMESTAMP(timezone=True),
                default=None, onupdate=func.now(), nullable=True),
      # Foreign key constraint
      sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
      sa.PrimaryKeyConstraint('id')
  )
  op.create_index(op.f('ix_files_id'), 'files', ['id'], unique=False)

  # ### end Alembic commands ###


def downgrade() -> None:
  """Downgrade schema."""
  # ### commands auto generated by Alembic - please adjust! ###
  # Drop tables in reverse order of creation to handle foreign key dependencies
  op.drop_index(op.f('ix_files_id'), table_name='files')
  op.drop_table('files')

  op.drop_index(op.f('ix_projects_id'), table_name='projects')
  op.drop_table('projects')

  op.drop_index(op.f('ix_items_description'), table_name='items')
  op.drop_index(op.f('ix_items_name'), table_name='items')
  op.drop_index(op.f('ix_items_id'), table_name='items')
  op.drop_table('items')
  # ### end Alembic commands ###
